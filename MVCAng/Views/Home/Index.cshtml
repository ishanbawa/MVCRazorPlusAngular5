
@{
    ViewBag.Title = "Home Page";
}

@section AngularComponent
{
  <home-page></home-page>
}

<div class="jumbotron">
  <h1>ASP.NET</h1>
  <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
  <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
  <div class="col-md-4">
    <h2>Getting started</h2>
    <p>
      ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
      enables a clean separation of concerns and gives you full control over markup
      for enjoyable, agile development.
    </p>
    <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
  </div>
  <div class="col-md-4">
    <h2>Get more libraries</h2>
    <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
    <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
  </div>
  <div class="col-md-4">
    <h2>Web Hosting</h2>
    <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
    <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
  </div>
</div>

<h2>@ViewBag.Title</h2>
<h3>I Am Loaded By MVC Razor - Cool @(1 + 99)</h3>

<div (click)="open(Title)">{{Title}}</div>
<input (dblclick)="open(Title)" [(ngModel)]="Title" />
 
<br />
{{MyModel.Property1}}
{{MyModel.Property2}}
<input (dblclick)="open(MyModel.Property2)" [(ngModel)]="MyModel.Property2" />

<br />
{{Cus}}
<input (contextmenu)="onRightClick($event)" (dblclick)="open(Cus)" [(ngModel)]="Cus" />

<script type="text/javascript">

  // Add All Data Specific to Page in This Array

  RootPageDataList.push(JSON.stringify({ Property1: 'Hello', Property2: 'Bye' }));

  RootPageDataList.push(JSON.stringify({ Custom: 'Whoa' }));

  // Angular Will Pick Them And Place Them In Interface objects in Compoonents

</script>




